"use strict";

var _process = process; // Not shown here: Additional logic to correctly interact with process's events, either using this direct manipulation, or via the API

var originalOnWarning;

if (Array.isArray(_process._events.warning)) {
  originalOnWarning = _process._events.warning[0];
  _process._events.warning[0] = onWarning;
} else {
  originalOnWarning = _process._events.warning;
  _process._events.warning = onWarning;
}

var messageMatch = /(?:--(?:experimental-)?loader\b|\bCustom ESM Loaders\b)/;

function onWarning(warning) {
  var _originalOnWarning;

  // Suppress warning about how `--loader` is experimental
  if ((warning === null || warning === void 0 ? void 0 : warning.name) === 'ExperimentalWarning' && messageMatch.test(warning === null || warning === void 0 ? void 0 : warning.message)) return; // Will be undefined if `--no-warnings`

  for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    rest[_key - 1] = arguments[_key];
  }

  return originalOnWarning === null || originalOnWarning === void 0 ? void 0 : (_originalOnWarning = originalOnWarning).call.apply(_originalOnWarning, [this, warning].concat(rest));
}