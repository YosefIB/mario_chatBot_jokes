'use strict';

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var lenient = require('./lenient');

var yn = function yn(input, options) {
  input = String(input).trim();
  options = Object.assign({
    lenient: false,
    "default": null
  }, options);

  if (options["default"] !== null && typeof options["default"] !== 'boolean') {
    throw new TypeError("Expected the `default` option to be of type `boolean`, got `".concat(_typeof(options["default"]), "`"));
  }

  if (/^(?:y|yes|true|1)$/i.test(input)) {
    return true;
  }

  if (/^(?:n|no|false|0)$/i.test(input)) {
    return false;
  }

  if (options.lenient === true) {
    return lenient(input, options);
  }

  return options["default"];
};

module.exports = yn; // TODO: Remove this for the next major release

module.exports["default"] = yn;